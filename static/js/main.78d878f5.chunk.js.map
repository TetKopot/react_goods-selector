{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","goodChoosen","handleClickClearSelection","setState","handleClickAddSelection","good","this","className","length","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"6PASaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAyB,CACvBC,YAAa,OAFjB,EAKEC,0BAA4B,kBAC1B,EAAKC,SAAS,CACZF,YAAa,MAPnB,EAWEG,wBAA0B,SAACC,GAAD,OACxB,EAAKF,SAAS,CACZF,YAAaI,KAbnB,4CAiBE,WAAU,IAAD,OACCJ,EAAgBK,KAAKN,MAArBC,YAER,OACE,uBAAMM,UAAU,oBAAhB,UACGN,EAAYO,OACX,qBAAID,UAAU,sCAAd,oBACMN,EADN,gBAIE,wBACE,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAASJ,KAAKJ,+BAIlB,oBAAIK,UAAU,QAAd,+BAGF,uBAAOA,UAAU,QAAjB,SAEE,gCACGT,EAAMa,KAAI,SAAAN,GAAI,OACb,qBAEE,UAAQ,OACRE,UAAWK,IACT,CAAE,+BAAgCP,IAASJ,IAJ/C,UAOE,6BACGI,IAASJ,EACR,wBACE,UAAQ,YACRQ,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAM,EAAKN,wBAAwBC,IAJ9C,eASA,wBACE,UAAQ,eACRI,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKR,0BAJhB,iBAWJ,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SACGF,MA7BEA,iBA3CrB,GAAyBQ,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.78d878f5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\nimport './App.scss';\n\ntype State = {\n  goodChoosen: string,\n};\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    goodChoosen: 'Jam',\n  };\n\n  handleClickClearSelection = () => (\n    this.setState({\n      goodChoosen: '',\n    })\n  );\n\n  handleClickAddSelection = (good: string) => (\n    this.setState({\n      goodChoosen: good,\n    })\n  );\n\n  render() {\n    const { goodChoosen } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {goodChoosen.length ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${goodChoosen} is selected`}\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleClickClearSelection}\n            />\n          </h1>\n        ) : (\n          <h1 className=\"title\">No goods selected</h1>\n        )}\n\n        <table className=\"table\">\n\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames(\n                  { 'has-background-success-light': good === goodChoosen },\n                )}\n              >\n                <td>\n                  {good !== goodChoosen ? (\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => this.handleClickAddSelection(good)}\n                    >\n                      +\n                    </button>\n                  ) : (\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={this.handleClickClearSelection}\n                    >\n                      -\n                    </button>\n                  )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}